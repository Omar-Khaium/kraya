// Mocks generated by Mockito 5.3.2 from annotations
// in kraya_backend/features/core/property/data/datasource/remote.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:kraya_backend/features/core/property/data/datasource/remote.dart'
    as _i4;
import 'package:kraya_backend/features/core/property/data/model/bills.dart'
    as _i3;
import 'package:kraya_backend/features/core/property/data/model/details.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePropertyDetailsModel_0 extends _i1.SmartFake
    implements _i2.PropertyDetailsModel {
  _FakePropertyDetailsModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePropertyBillsModel_1 extends _i1.SmartFake
    implements _i3.PropertyBillsModel {
  _FakePropertyBillsModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PropertyRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPropertyRemoteDataSource extends _i1.Mock
    implements _i4.PropertyRemoteDataSource {
  @override
  _i5.Future<_i2.PropertyDetailsModel> details({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #details,
          [],
          {#id: id},
        ),
        returnValue: _i5.Future<_i2.PropertyDetailsModel>.value(
            _FakePropertyDetailsModel_0(
          this,
          Invocation.method(
            #details,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.PropertyDetailsModel>.value(
            _FakePropertyDetailsModel_0(
          this,
          Invocation.method(
            #details,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i2.PropertyDetailsModel>);
  @override
  _i5.Future<_i3.PropertyBillsModel> bills({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #bills,
          [],
          {#id: id},
        ),
        returnValue:
            _i5.Future<_i3.PropertyBillsModel>.value(_FakePropertyBillsModel_1(
          this,
          Invocation.method(
            #bills,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.PropertyBillsModel>.value(_FakePropertyBillsModel_1(
          this,
          Invocation.method(
            #bills,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.PropertyBillsModel>);
}
